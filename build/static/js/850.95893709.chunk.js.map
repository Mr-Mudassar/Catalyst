{"version":3,"file":"static/js/850.95893709.chunk.js","mappings":"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","sources":["Shared/Chart/Index.jsx","Pages/Admin/Dashboard/Index.jsx","Shared/DataTable/index.jsx","Shared/DateRangeModal/index.jsx","Shared/Headings/PageHeading/index.jsx","Shared/MyDropdown/index.jsx","utils/constants.js","utils/functions.js"],"sourcesContent":["import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport \"./chart.scss\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Chart = ({ graphData, mode }) => {\r\n  const data =\r\n    mode === \"RedemptionsGraph\"\r\n      ? {\r\n          labels: graphData?.map((item) => item?.day ?? item?.month),\r\n          datasets: [\r\n            {\r\n              label: \"Sent but not redeemed\",\r\n              data: graphData?.map((item) => item?.notRedeemedCount),\r\n              backgroundColor: \"rgb(0, 102, 51)\", // Greenish color\r\n            },\r\n            {\r\n              label: \"Redeemed\",\r\n              data: graphData?.map((item) => item?.redeemedCount),\r\n              backgroundColor: \"rgb(221, 173, 38)\", // Yellowish color\r\n            },\r\n          ],\r\n        }\r\n      : {\r\n          labels: graphData?.map((item) => item?.state ?? item?.shelterName),\r\n          datasets: [\r\n            {\r\n              label: \"Adopters Count\",\r\n              data: graphData?.map((item) => item?.count),\r\n              backgroundColor: \"rgb(0, 102, 51)\",\r\n            },\r\n          ],\r\n        };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: \"Redemptions\",\r\n        color: \"#003000\",\r\n        fontSize: \"200px\",\r\n        fontWeight: \"700\",\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        beginAtZero: true,\r\n        max: 100,\r\n        ticks: {\r\n          stepSize: 20,\r\n        },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          // stepSize: 0,\r\n          callback: function (value) {\r\n            return value ;\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return <Bar data={data} options={options} />;\r\n};\r\n\r\nexport default Chart;\r\n","import {\r\n  dashboardCard,\r\n  getAllAdopterGraph,\r\n  getAllStateWiseData,\r\n  recentOrders,\r\n  recentShelters,\r\n} from \"../../../Redux/features/User/userApi\";\r\nimport {\r\n  DASHBOARD_CARDS,\r\n  ADMIN_GET_LATEST_SHELTERS,\r\n  ADMIN_DASHBOARD_GRAPH,\r\n  // yearsData,\r\n  US_States,\r\n  columnsForRecent5Shelters,\r\n  columnsForRecent5Orders,\r\n  FilterDuration,\r\n} from \"../../../utils/constants\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport {\r\n  ProductNameForTable,\r\n  ShelterStatusForTable,\r\n  SubscriptionStatusForTable,\r\n} from \"../../../utils/functions\";\r\nimport \"./dashboard.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addDays, format } from \"date-fns\";\r\nimport Table from \"../../../Shared/DataTable\";\r\nimport Chart from \"../../../Shared/Chart/Index\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MyDropdown from \"../../../Shared/MyDropdown\";\r\nimport { IoDocumentTextOutline } from \"react-icons/io5\";\r\nimport DateRangeModal from \"../../../Shared/DateRangeModal\";\r\nimport Images from \"../../../Assets/Images/ImageHelper/index\";\r\nimport PageHeading from \"../../../Shared/Headings/PageHeading\";\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const [tableData, setTableData] = useState([]);\r\n  const [cardsData, setCardsData] = useState([]);\r\n  const [duration, setDuration] = useState(\"monthly\");\r\n  const [giveAwayData, setGiveAwayData] = useState({});\r\n  const [stateWiseData, setStateWiseData] = useState([]);\r\n  const [selectOneState, setSelectOneState] = useState(\"\");\r\n  const [ordersTableData, setOrdersTableData] = useState([]);\r\n  const [emailPermission, setEmailPermission] = useState(null);\r\n  const [repeatPurchaseRate, setRepeatPurchaseRate] = useState();\r\n  const [recentSheltersData, setRecentSheltersData] = useState([]);\r\n  const [redemptionGraphData, setRedemptionGraphData] = useState([]);\r\n  const [recentShelterOrders, setRecentShelterOrders] = useState([]);\r\n\r\n  const [dateRange, setDateRange] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: addDays(new Date(), 0),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n\r\n  const handleSelect = (ranges) => {\r\n    setDateRange([ranges.selection]);\r\n    dashboardCards(\r\n      format(new Date(ranges.selection.startDate), \"yyyy-MM-dd\"),\r\n      format(new Date(ranges.selection.endDate), \"yyyy-MM-dd\")\r\n    );\r\n  };\r\n\r\n  // **************** Clear date range data ****************\r\n  const handleClearClick = () => {\r\n    setDateRange([\r\n      {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: \"selection\",\r\n      },\r\n    ]);\r\n    dashboardCards(\"\", \"\");\r\n  };\r\n\r\n  // **************** Dashborad cards api call ****************\r\n  const fetchDashboardCards = () => {\r\n    const data = { apiEndpoint: DASHBOARD_CARDS };\r\n    dispatch(dashboardCard(data)).then((res) => {\r\n      if (res.type === \"dashboardCard/fulfilled\") {\r\n        setCardsData(res?.payload?.data);\r\n        setGiveAwayData(res?.payload?.GiveAways);\r\n        setRepeatPurchaseRate(res?.payload?.repeatAdopters);\r\n      }\r\n    });\r\n  };\r\n\r\n  // **************** Recent 5 Shelters API ****************\r\n  const fetchRecentShelters = () => {\r\n    const recentSheltersEndpoint = { apiEndpoint: ADMIN_GET_LATEST_SHELTERS };\r\n    dispatch(recentShelters(recentSheltersEndpoint)).then((res) => {\r\n      if (res.type === \"recentShelters/fulfilled\") {\r\n        setRecentSheltersData(res?.payload?.shelters);\r\n      }\r\n    });\r\n  };\r\n\r\n  // **************** Recent 5 Orders API ****************\r\n  const fetchRecentOrders = () => {\r\n    const recentOrdersEnpoint = { apiEndpoint: \"shelter/latestSubscription\" };\r\n    dispatch(recentOrders(recentOrdersEnpoint)).then((res) => {\r\n      if (res.type === \"recentOrders/fulfilled\") {\r\n        setRecentShelterOrders(res?.payload?.data?.subscriptions);\r\n      }\r\n    });\r\n  };\r\n\r\n  // +++++++++++  Dashboard State Wise Graph API Call  +++++++++++\r\n  const fetchStateWiseGraphData = () => {\r\n    const graphApiEndPoint = {\r\n      apiEndpoint: `adopter/getAdopterCountByState?state=${selectOneState}`,\r\n    };\r\n    dispatch(getAllStateWiseData(graphApiEndPoint)).then((res) => {\r\n      if (res.type === \"getAllStateWiseData/fulfilled\") {\r\n        setStateWiseData(res?.payload);\r\n      }\r\n    });\r\n  };\r\n\r\n  // ****************** Calling APIs on page load   ****************\r\n  useEffect(() => {\r\n    fetchRecentOrders();\r\n    fetchDashboardCards();\r\n    fetchRecentShelters();\r\n  }, []);\r\n\r\n  // Fetch state-wise graph data when the selected state changes\r\n  useEffect(() => {\r\n    fetchStateWiseGraphData();\r\n  }, [selectOneState]);\r\n\r\n  //**************/ dashboard cards api call with filter **************\r\n  const dashboardCards = (startDate, endDate) => {\r\n    const data = {\r\n      apiEndpoint:\r\n        DASHBOARD_CARDS + `?startDate=${startDate}&endDate=${endDate}`,\r\n    };\r\n    dispatch(dashboardCard(data)).then((res) => {\r\n      if (res.type === \"dashboardCard/fulfilled\") {\r\n        setCardsData(res?.payload?.data);\r\n        setGiveAwayData(res?.payload?.GiveAways);\r\n        setRepeatPurchaseRate(res?.payload?.repeatAdopters);\r\n      }\r\n    });\r\n  };\r\n\r\n  // +++++++++++  Dashboard Redemption Graph api call  +++++++++++\r\n\r\n  useEffect(() => {\r\n    const graphApiEndPoint = {\r\n      apiEndpoint: ADMIN_DASHBOARD_GRAPH + `?type=${duration}`,\r\n    };\r\n\r\n    dispatch(getAllAdopterGraph(graphApiEndPoint)).then((res) => {\r\n      if (res.type === \"getAllAdopterGraph/fulfilled\")\r\n        setRedemptionGraphData(res?.payload?.adopterData);\r\n    });\r\n  }, [duration]);\r\n\r\n  // +++++++++++  Data of Recent 5 Shelters Data table   +++++++++++++++++\r\n  useEffect(() => {\r\n    if (recentSheltersData && recentSheltersData.length > 0) {\r\n      let sheltersArray = [];\r\n\r\n      recentSheltersData.forEach((item) => {\r\n        sheltersArray.push({\r\n          shelterName:\r\n            item.shelterName?.length > 20\r\n              ? item.shelterName.slice(0, 20) + \"...\"\r\n              : item.shelterName,\r\n          email: item.email,\r\n          state: item.state,\r\n          ratio: `${item.numberOfAdopters} /  ${item.numberOfPack}`,\r\n          totalAdopters: item.inviteSent,\r\n          redeem: item.inviteAccepted,\r\n          status: item.status && ShelterStatusForTable(item.status),\r\n          action: (\r\n            <span>\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle\r\n                  className=\"p-0\"\r\n                  nav\r\n                  disabled={item.status === \"WAITING\" ? true : false}\r\n                >\r\n                  <div className=\"bgProperties rounded-circle\">•••</div>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"px-0 dropdown-custom-width position-fixed\">\r\n                  <DropdownItem className=\"px-2 dropdown-custom-width-inner fs-6\">\r\n                    <Link\r\n                      to={`/admin/shelter/adopters/${item.id}`}\r\n                      className=\"text-dark fs-6 text-decoration-none\"\r\n                    >\r\n                      <IoDocumentTextOutline className=\"me-1 fs-6 mb-1\" />\r\n                      Show Details\r\n                    </Link>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </span>\r\n          ),\r\n        });\r\n      });\r\n\r\n      setTableData(sheltersArray);\r\n    } else {\r\n      setTableData([]);\r\n    }\r\n  }, [recentSheltersData]);\r\n\r\n  // +++++++++++  Data of Recent 5 subscriptions Data table  ++++++++++++\r\n  useEffect(() => {\r\n    if (recentShelterOrders && recentShelterOrders.length > 0) {\r\n      let sheltersArray = [];\r\n\r\n      recentShelterOrders.forEach((item) => {\r\n        sheltersArray.push({\r\n          shelterName: item?.Shelter?.shelterName,\r\n          email: item?.Shelter?.email,\r\n          state: item?.Shelter?.state,\r\n          product: item?.productId && ProductNameForTable(item?.productId),\r\n          quantity: item?.quantity,\r\n          frequency: item?.frequency,\r\n          status: item?.status && SubscriptionStatusForTable(item?.status),\r\n          lastSentDate:\r\n            item?.lastSentDate &&\r\n            format(new Date(item?.lastSentDate), \"yyyy-MM-dd\"),\r\n        });\r\n      });\r\n\r\n      setOrdersTableData(sheltersArray);\r\n    } else {\r\n      setOrdersTableData([]);\r\n    }\r\n  }, [recentShelterOrders]);\r\n\r\n  // ************* Appending Images in dashboard cards  *************\r\n  const CardsImages = [\r\n    Images.PetHome_Image,\r\n    Images.Order_Image,\r\n    Images.Shear_Image,\r\n    Images.Gift_Image,\r\n  ];\r\n\r\n  // *********  Appending Cards Images in cardData coming from API ********\r\n  const appendedCardData = cardsData.map((item, index) => {\r\n    return { ...item, cardImage: CardsImages[index] };\r\n  });\r\n\r\n  return (\r\n    <Container id=\"dashboard\" className=\"mt-3\">\r\n      <Row className=\"Title justify-content-between align-items-center gy-4\">\r\n        <Col\r\n          sm={6}\r\n          md={8}\r\n          lg={9}\r\n          xl={10}\r\n          className=\"leftside d-flex flex-column justify-content-center\"\r\n        >\r\n          <PageHeading headingText={\"Dashboard\"} />\r\n          <p className=\"m-0\">Hi! Welcome back to Catalystpet Admin!</p>\r\n        </Col>\r\n        <Col\r\n          sm={6}\r\n          md={4}\r\n          lg={3}\r\n          xl={2}\r\n          className=\"custom-height rightside d-flex justify-content-end align-items-center\"\r\n        >\r\n          <DateRangeModal\r\n            setDateRange={setDateRange}\r\n            dateRange={dateRange}\r\n            handleSelect={handleSelect}\r\n            handleClearClick={handleClearClick}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <hr className=\"mx-0\" />\r\n\r\n      <Row className=\"cards my-3\">\r\n        {appendedCardData.map((items, index) => (\r\n          <Col lg={3} md={6} sm={6} className=\"cardContent gy-3\" key={index}>\r\n            <div className=\"content bg-white\">\r\n              <div className=\"image\">\r\n                <img src={items?.cardImage} alt=\"\" />\r\n              </div>\r\n              <div className=\"text\">\r\n                <center>\r\n                  <p className=\"m-0\">{items.count}</p>\r\n                  <p className=\"m-0 fs-6 fw-bold\">{items.label}</p>\r\n                </center>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n      <Row className=\"graphChart gy-3\">\r\n        <Col lg={9} md={12}>\r\n          <div className=\"Chart bg-white\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h2 className=\"text-darkgreen fs-4 fw-bolder ms-4\">\r\n                Redemptions\r\n              </h2>\r\n              <MyDropdown\r\n                name=\"duration\"\r\n                Options={FilterDuration}\r\n                value={duration}\r\n                onChangeHandle={(e) => setDuration(e.target.value)}\r\n                showPlaceholder={false}\r\n                className=\"shadow-0 border rounded-3\"\r\n              />\r\n            </div>\r\n            <Chart mode={\"RedemptionsGraph\"} graphData={redemptionGraphData} />\r\n          </div>\r\n        </Col>\r\n        <Col lg={3} md={12} className=\"giveAways bg-white\">\r\n          <div className=\"giveaways-card \">\r\n            <div className=\"giveawaysHead\">\r\n              <div className=\"giveaways-header\">\r\n                <h2>Overall Repeat Count</h2>\r\n              </div>\r\n              <div className=\"giveaways-body\">\r\n                <div className=\"giveaway-item shelters\">\r\n                  <span>{repeatPurchaseRate?.adopterRepeatPercentage}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"giveaways-card \">\r\n            <div className=\"giveawaysHead\">\r\n              <div className=\"giveaways-header\">\r\n                <h2>Giveaways</h2>\r\n              </div>\r\n              <div className=\"giveaways-body\">\r\n                <div className=\"giveaway-item shelters\">\r\n                  <p>Shelters Giveaways</p>\r\n                  <span>{giveAwayData?.TotalSheltersGiveAways}</span>\r\n                </div>\r\n                <div className=\"giveaway-item adopters\">\r\n                  <p>Adopters Giveaways</p>\r\n                  <span>{giveAwayData.TotalAdoptersGiveAways}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"giveaways-footer pt-3\">\r\n              <span className=\"total\">{giveAwayData.Total}</span>\r\n              <span className=\"label\">Total</span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={12} className=\"p-0\">\r\n          <div className=\"notification mt-3 py-4 bg-white\">\r\n            <div className=\"heading d-flex justify-content-between align-items-center\">\r\n              <h2 className=\"text-darkgreen fs-4 fw-bolder\">\r\n                Recent 5 Shelters\r\n              </h2>\r\n              <Link to={\"/admin/shelter\"} className=\"text-black fw-bold\">\r\n                <p>See all</p>\r\n              </Link>\r\n            </div>\r\n            <div className=\"\"></div>\r\n            <Table columns={columnsForRecent5Shelters} data={tableData} />\r\n          </div>\r\n        </Col>\r\n        <Col md={12} className=\"p-0\">\r\n          <div className=\"notification mt-2 mb-3 py-4 mx-2 bg-white\">\r\n            <div className=\"heading d-flex justify-content-between align-items-center\">\r\n              <h2 className=\"text-darkgreen fs-4 fw-bolder\">Recent 5 Orders</h2>\r\n              <Link to={\"/admin/orderHistory\"} className=\"text-black fw-bold\">\r\n                <p>See all</p>\r\n              </Link>\r\n            </div>\r\n            <Table columns={columnsForRecent5Orders} data={ordersTableData} />\r\n          </div>\r\n        </Col>\r\n        <Col md={12} className=\"graphChart p-0\">\r\n          <div className=\"Chart bg-white\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h2 className=\"text-darkgreen fs-4 fw-bolder ms-4\">\r\n                State Wise Shelters Data\r\n              </h2>\r\n              <MyDropdown\r\n                name=\"selectOneState\"\r\n                Options={US_States}\r\n                value={selectOneState}\r\n                onChangeHandle={(e) => setSelectOneState(e.target.value)}\r\n                placeholder=\"All States\"\r\n                className=\"shadow-0 border rounded-3\"\r\n              />\r\n            </div>\r\n            <Chart mode={\"StateGraph\"} graphData={stateWiseData} />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, memo } from \"react\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"react-super-responsive-table\";\r\n\r\nimport { TiArrowUnsorted } from \"react-icons/ti\";\r\n\r\nconst MyTableComponent = ({ columns, data }) => {\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: \"null\",\r\n    direction: \"asc\",\r\n  });\r\n\r\n  // Function to handle sorting\r\n  const handleSort = (key) => {\r\n    let direction = \"asc\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"asc\") {\r\n      direction = \"desc\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  // Sorting logic based on current sortConfig state\r\n  const sortedData = React.useMemo(() => {\r\n    if (sortConfig.key !== null) {\r\n      const sorted = [...data].sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"asc\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"asc\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n      return sorted;\r\n    }\r\n    return data;\r\n  }, [data, sortConfig]);\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <Table className=\"table table-bordered table-hover border-success w-100 p-0 m-0\">\r\n        <Thead className=\"text-yellow bg-green\">\r\n          <Tr>\r\n            {columns.map((column, index) => (\r\n              <Th\r\n                className={`p-2 text-yellow bg-green  ${\r\n                  column.align ? `text-${column.align}` : \"\"\r\n                }`}\r\n                key={index}\r\n                onClick={() => handleSort(column.dataKey)}\r\n              >\r\n                {column.label}\r\n\r\n                {column.label !== \"Status\" &&\r\n                  column.label !== \"Action\" &&\r\n                  column.label !== \"Subscription Status\" &&\r\n                  column.label !== \"Redemption Status\" && (\r\n                    <span className=\"ml-2 cursorPointer\">\r\n                      <TiArrowUnsorted size={16} />\r\n                    </span>\r\n                  )}\r\n              </Th>\r\n            ))}\r\n          </Tr>\r\n        </Thead>\r\n\r\n        {sortedData.length === 0 ? (\r\n          <Tbody>\r\n            <Tr>\r\n              {columns.map((column, cellIndex) => (\r\n                <Td\r\n                  className={`p-2 text-green fw-bold text-center`}\r\n                  key={cellIndex}\r\n                >\r\n                  {\"---\"}\r\n                </Td>\r\n              ))}\r\n            </Tr>\r\n          </Tbody>\r\n        ) : (\r\n          <Tbody>\r\n            {sortedData.map((item, rowIndex) => (\r\n              <Tr key={rowIndex}>\r\n                {columns.map((column, cellIndex) => (\r\n                  <Td\r\n                    className={`p-2 ${\r\n                      column.align ? `text-${column.align}` : \"\"\r\n                    }`}\r\n                    key={cellIndex}\r\n                  >\r\n                    {item[column.dataKey]}\r\n                  </Td>\r\n                ))}\r\n              </Tr>\r\n            ))}\r\n          </Tbody>\r\n        )}\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(MyTableComponent);\r\n","import \"./dateRange.scss\";\r\nimport { addDays } from \"date-fns\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { celendarIcon } from \"../../Assets/Icon\";\r\nimport { DateRange } from \"react-date-range\";\r\n\r\nconst DateRangeModal = ({\r\n  dateRange,\r\n  setDateRange,\r\n  handleSelect,\r\n  handleClearClick,\r\n}) => {\r\n  const [isDatePickerVisible, setDatePickerVisible] = useState(false);\r\n  const modalRef = useRef(null); // Create a ref for the modal\r\n\r\n  const handleLabelClick = () => {\r\n    setDatePickerVisible(!isDatePickerVisible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n        setDatePickerVisible(false);\r\n      }\r\n    };\r\n\r\n    if (isDatePickerVisible) {\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n    } else {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [isDatePickerVisible]);\r\n\r\n  return (\r\n    <div className=\"main-dateRange position-relative\">\r\n      <label\r\n        htmlFor=\"DateRange\"\r\n        className=\"custom-lable\"\r\n        onClick={handleLabelClick}\r\n      >\r\n        <div className=\"d-flex justify-content-center\">\r\n          <span className=\"pt-1 pe-2 fs-6\">{celendarIcon}</span>\r\n          <p className=\"m-0 pt-2\">Date Range</p>\r\n        </div>\r\n      </label>\r\n      {isDatePickerVisible && (\r\n        <div\r\n          className=\"position-absolute end-0 custom-top bg-white shadow-lg rounded-3\"\r\n          ref={modalRef} // Attach ref to the modal\r\n        >\r\n          <DateRange\r\n            id=\"DateRange\"\r\n            onChange={handleSelect}\r\n            moveRangeOnFirstSelection={false}\r\n            showSelectionPreview={true}\r\n            ranges={dateRange}\r\n            direction=\"vertical\"\r\n            maxDate={new Date()} // Disable future dates\r\n          />\r\n\r\n          <button\r\n            onClick={handleClearClick}\r\n            className=\"btn bg-green text-white py-1 px-2 mt-0 font-12 mx-3 mb-3\"\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateRangeModal;\r\n","import \"./styles.scss\";\r\nimport React, { memo } from \"react\";\r\n\r\nconst PageHeading = ({headingText, className, style}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h2\r\n        className={`fw-bold text-darkgreen  ${className} heading`}\r\n        style={{ style, textTransform: \"camelCase\" }}\r\n      >\r\n        {headingText}\r\n      </h2>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default memo(PageHeading);\r\n","import React from \"react\";\r\nimport { Label } from \"reactstrap\";\r\n\r\nconst MyDropdown = (props) => {\r\n  const {\r\n    Options,\r\n    className,\r\n    name,\r\n    onChangeHandle,\r\n    onBlurHandle,\r\n    placeholder,\r\n    showPlaceholder = true,\r\n    value,\r\n    label,\r\n    labelClass,\r\n    disabled,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={`mb-0 customSelect text-custom-dark`}>\r\n      <Label className={`${labelClass} mb-0 p-0 fw-bold`}>{label}</Label>\r\n      <select\r\n        className={`customDropdownRadius w-100 form-control-lg ${className}`}\r\n        name={name}\r\n        onChange={onChangeHandle}\r\n        onBlur={onBlurHandle}\r\n        value={value}\r\n        disabled={disabled}\r\n      >\r\n        {showPlaceholder && <option value=\"\">{placeholder}</option>}\r\n        {Options &&\r\n          Options?.map((item, index) => (\r\n            <option key={index} value={item?.value}>\r\n              {item.label}\r\n            </option>\r\n          ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDropdown;\r\n","//pagination prams\r\nexport const PAGE_RANGE = 2;\r\n\r\n//api endpoints\r\nexport const LOGIN_URL = \"/auth/login\";\r\nexport const SIGNUP_URL = \"/auth/signup\";\r\nexport const GET_USER_URL = \"/user/getUser\";\r\nexport const VERIFY_OTP_URL = \"/auth/verifyOtp\";\r\nexport const RESEND_OTP_URL = \"/auth/resendOtp\";\r\nexport const EDIT_PROFILE_URL = \"/user/updateUser\";\r\nexport const DELETE_ACCOUNT_URL = \"/user/deleteAccount\";\r\nexport const RESET_PASSWORD_URL = \"/auth/resetPassword\";\r\nexport const CHANGE_PASSWORD_URL = \"/user/changePassword\";\r\nexport const FORGOT_PASSWORD_URL = \"/auth/forgotPassword\";\r\nexport const BUYER_GET_WISHLIST = \"/wishlist/getWishlist\";\r\nexport const SELLER_GET_WISHLIST = \"/wishlist/getWishlist\";\r\nexport const ADMIN_GET_ALL_USERS_URL = \"/user/getAllUsers\";\r\nexport const BUYER_ADD_NDC_URL = \"wishlist/addBuyerWishlist\";\r\nexport const SELLER_ADD_NDC_URL = \"wishlist/addSellerWishlist\";\r\nexport const ADMIN_CHANGE_USER_STATUS_URL = \"/user/changeUserStatus\";\r\nexport const ADD_PHARMACY_DETAIL_URL = \"/pharmacy/addPharmacyDetails\";\r\nexport const Delete_Adopter = `/AddEditSubscriptionModalAdopter/`;\r\nexport const Single_Adopter_User_List = `/adopter/getSingleAdopter/`;\r\n// admin api endpoint\r\nexport const DASHBOARD_CARDS = \"/dashboard/dashboardCard\";\r\nexport const ADMIN_GET_LATEST_SHELTERS = \"/admin/latestShelters\";\r\nexport const ADMIN_DASHBOARD_GRAPH = \"/adopter/getAllAdopterGraph\";\r\nexport const GET_ALL_SHELTERS = \"/shelter/getAllShelter\";\r\nexport const GET_ADOPTERS_OF_SHELTER = \"/admin/getAllAdopterByAdmin/\";\r\nexport const SHELTER_LIMIT_PUT = \"/shelter/shelterLimit\";\r\nexport const SHELTER_LIMIT_GET = \"/shelter/getAllShelterLimit\";\r\n\r\n//options\r\nexport const NumberOfCats = [\r\n  ...(() => {\r\n    const options = [];\r\n\r\n    for (let i = 1; i <= 291; i += 10) {\r\n      const end = i + 9 <= 300 ? i + 9 : 300;\r\n      options.push({\r\n        label: `${i} - ${end} cats`,\r\n        value: [i, end],\r\n      });\r\n    }\r\n    options.push({ label: \"300+ Cats\", value: \"300+ Cats\" });\r\n    options.push({ label: \"Don't know yet\", value: \"Don't know yet\" });\r\n\r\n    return options;\r\n  })(),\r\n];\r\n\r\nexport const US_States = [\r\n  ...(() => {\r\n    const options = [];\r\n\r\n    const states = [\r\n      \"Alabama\",\r\n      \"Alaska\",\r\n      \"Arizona\",\r\n      \"Arkansas\",\r\n      \"California\",\r\n      \"Colorado\",\r\n      \"Connecticut\",\r\n      \"Delaware\",\r\n      \"Florida\",\r\n      \"Georgia\",\r\n      \"Hawaii\",\r\n      \"Idaho\",\r\n      \"Illinois\",\r\n      \"Indiana\",\r\n      \"Iowa\",\r\n      \"Kansas\",\r\n      \"Kentucky\",\r\n      \"Louisiana\",\r\n      \"Maine\",\r\n      \"Maryland\",\r\n      \"Massachusetts\",\r\n      \"Michigan\",\r\n      \"Minnesota\",\r\n      \"Mississippi\",\r\n      \"Missouri\",\r\n      \"Montana\",\r\n      \"Nebraska\",\r\n      \"Nevada\",\r\n      \"New Hampshire\",\r\n      \"New Jersey\",\r\n      \"New Mexico\",\r\n      \"New York\",\r\n      \"North Carolina\",\r\n      \"North Dakota\",\r\n      \"Ohio\",\r\n      \"Oklahoma\",\r\n      \"Oregon\",\r\n      \"Pennsylvania\",\r\n      \"Rhode Island\",\r\n      \"South Carolina\",\r\n      \"South Dakota\",\r\n      \"Tennessee\",\r\n      \"Texas\",\r\n      \"Utah\",\r\n      \"Vermont\",\r\n      \"Virginia\",\r\n      \"Washington\",\r\n      \"West Virginia\",\r\n      \"Wisconsin\",\r\n      \"Wyoming\",\r\n    ];\r\n\r\n    states.forEach((state) => {\r\n      options.push({\r\n        label: state,\r\n        value: state,\r\n      });\r\n    });\r\n\r\n    return options;\r\n  })(),\r\n];\r\n\r\nexport const shippingMethodOptions = [\r\n  { label: \"Shipping method\", value: \"parsal\" },\r\n  { label: \"Shipping method 1\", value: \"physically\" },\r\n  { label: \"Shipping method 2\", value: \"online\" },\r\n];\r\n\r\nexport const yearsData = [\r\n  { label: \"2024\", value: \"2024\" },\r\n  { label: \"2023\", value: \"2023\" },\r\n  { label: \"2022\", value: \"2022\" },\r\n  { label: \"2021\", value: \"2021\" },\r\n  { label: \"2020\", value: \"2020\" },\r\n  { label: \"2019\", value: \"2019\" },\r\n  { label: \"2018\", value: \"2018\" },\r\n  { label: \"2017\", value: \"2017\" },\r\n  { label: \"2016\", value: \"2016\" },\r\n  { label: \"2015\", value: \"2015\" },\r\n];\r\nexport const productSubscription = [\r\n  { label: \"MULTI CAT\", value: \"42662009471125\" },\r\n  { label: \"HEALTHY CAT\", value: \"42661956550805\" },\r\n  { label: \"UNSCENTED\", value: \"42662019858581\" },\r\n  { label: \"WOOD PELLETS\", value: \"45119920930965\" },\r\n];\r\n\r\nexport const FrequencyOptions = [\r\n  // {\r\n  //   label: \"Daily\",\r\n  //   value: \"day\",\r\n  // },\r\n  {\r\n    label: \"Weekly\",\r\n    value: \"week\",\r\n  },\r\n  {\r\n    label: \"Monthly\",\r\n    value: \"month\",\r\n  },\r\n];\r\n\r\nexport const QuantityOptions = [\r\n  {\r\n    label: \"1 Pack\",\r\n    value: 1,\r\n  },\r\n  {\r\n    label: \"2 Packs\",\r\n    value: 2,\r\n  },\r\n  {\r\n    label: \"3 Packs\",\r\n    value: 3,\r\n  },\r\n  {\r\n    label: \"4 Packs\",\r\n    value: 4,\r\n  },\r\n  {\r\n    label: \"5 Packs\",\r\n    value: 5,\r\n  },\r\n];\r\n\r\n//options\r\nexport const weeksRange = [\r\n  ...(() => {\r\n    const options = [];\r\n    options.push({\r\n      label: `1 week`,\r\n      value: 1,\r\n    });\r\n\r\n    for (let i = 2; i <= 12; i += 1) {\r\n      options.push({\r\n        label: `${i} weeks`,\r\n        value: i,\r\n      });\r\n    }\r\n    return options;\r\n  })(),\r\n];\r\n\r\nexport const monthsRange = [\r\n  ...(() => {\r\n    const options = [];\r\n\r\n    options.push({\r\n      label: `1 month`,\r\n      value: 1,\r\n    });\r\n\r\n    for (let i = 2; i <= 12; i += 1) {\r\n      options.push({\r\n        label: `${i} months`,\r\n        value: i,\r\n      });\r\n    }\r\n    return options;\r\n  })(),\r\n];\r\n\r\nexport const RecordsPerPageOptions = [\r\n  {\r\n    label: \"10 records\",\r\n    value: \"10\",\r\n  },\r\n  {\r\n    label: \"20 records\",\r\n    value: \"20\",\r\n  },\r\n  {\r\n    label: \"30 records\",\r\n    value: \"30\",\r\n  },\r\n  {\r\n    label: \"40 records\",\r\n    value: \"40\",\r\n  },\r\n  {\r\n    label: \"50 records\",\r\n    value: \"50\",\r\n  },\r\n];\r\n\r\n// **********  Options for filtering Graph  **********\r\nexport const FilterDuration = [\r\n  {\r\n    label: \"Today\",\r\n    value: \"daily\",\r\n  },\r\n  // {\r\n  //   label: \"Current Week\",\r\n  //   value: \"weekly\",\r\n  // },\r\n  {\r\n    label: \"Current Month\",\r\n    value: \"monthly\",\r\n  },\r\n  {\r\n    label: \"Current Year\",\r\n    value: \"yearly\",\r\n  },\r\n];\r\n\r\n// +++++++++++  Column of Recent 5 Shelters Data table   ++++++++++++\r\n\r\nexport const columnsForRecent5Shelters = [\r\n  { label: \"Shelter Name\", dataKey: \"shelterName\", align: \"left\" },\r\n  { label: \"Email\", dataKey: \"email\", align: \"left\" },\r\n  { label: \"State\", dataKey: \"state\", align: \"center\" },\r\n  { label: \"Invites sent\", dataKey: \"totalAdopters\", align: \"center\" },\r\n  { label: \"Redemptions\", dataKey: \"redeem\", align: \"center\" },\r\n  { label: \"Ratio\", dataKey: \"ratio\", align: \"center\" },\r\n  { label: \"Status\", dataKey: \"status\", align: \"center\" },\r\n  { label: \"Action\", dataKey: \"action\", align: \"center\" },\r\n];\r\n\r\n// +++++++++++  Column of Recent 5 orders Data table   ++++++++++++\r\n\r\nexport const columnsForRecent5Orders = [\r\n  { label: \"Shelter Order Name\", dataKey: \"shelterName\", align: \"left\" },\r\n  { label: \"Shelter Email\", dataKey: \"email\", align: \"left\" },\r\n  { label: \"State\", dataKey: \"state\", align: \"center\" },\r\n  { label: \"Product\", dataKey: \"product\", align: \"center\" },\r\n  { label: \"Quantity\", dataKey: \"quantity\", align: \"center\" },\r\n  { label: \"Frequency\", dataKey: \"frequency\", align: \"center\" },\r\n  { label: \"Order Date\", dataKey: \"lastSentDate\", align: \"center\" },\r\n  { label: \"Subscription Status\", dataKey: \"status\", align: \"center\" },\r\n];\r\n\r\n// +++++++++++  Column of Data table of Get All Shelters main table   ++++++++++++\r\nexport const GetAllSheltersColumns = [\r\n  { label: \"Shelter Name\", dataKey: \"shelterName\", align: \"left\" },\r\n  { label: \"Email\", dataKey: \"email\", align: \"left\" },\r\n  { label: \"State\", dataKey: \"state\", align: \"center\" },\r\n  // { label: \"Ratio\", dataKey: \"ratio\", align: \"center\" },\r\n  { label: \"Invites Sent\", dataKey: \"totalAdopters\", align: \"center\" },\r\n  { label: \"Redeemed\", dataKey: \"redeem\", align: \"center\" },\r\n  { label: \"Repeat\", dataKey: \"repeatPercentage\", align: \"center\" },\r\n  { label: \"Status\", dataKey: \"status\", align: \"center\" },\r\n  // { label: \"Product\", dataKey: \"productId\", align: \"center\" },\r\n  // { label: \"Quant\", dataKey: \"quantity\", align: \"center\" },\r\n  // { label: \"Freq\", dataKey: \"frequency\", align: \"center\" },\r\n  {\r\n    label: \"Subscription Status\",\r\n    dataKey: \"subscriptionStatus\",\r\n    align: \"center\",\r\n  },\r\n  { label: \"Action\", dataKey: \"action\", align: \"center\" },\r\n];\r\n\r\n","import { Badge } from \"reactstrap\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst setUserInitialValues = (initalValues, user) => {\r\n  return {\r\n    ...initalValues,\r\n    lastName: user?.lastName,\r\n    firstName: user?.firstName,\r\n  };\r\n};\r\n\r\nconst parseDate = (date) => {\r\n  return format(new Date(date), \"yyyy-MM-dd\");\r\n};\r\n\r\nexport const ProductNameForTable = (data) => {\r\n  if (data === \"42662009471125\") {\r\n    return \"MULTI CAT\";\r\n  } else if (data === \"42661956550805\") {\r\n    return \"HEALTHY CAT\";\r\n  } else if (data === \"42662019858581\") {\r\n    return \"UNSCENTED\";\r\n  } else if (data === \"45119920930965\") {\r\n    return \"WOOD PELLETS\";\r\n  } else {\r\n    return \"Unknown Product\";\r\n  }\r\n};\r\n\r\nexport const ShelterStatusForTable = (data) => {\r\n  if (data === \"BLOCKED\") {\r\n    return (\r\n      <Badge className=\"bg-dark\" pill>\r\n        Blocked\r\n      </Badge>\r\n    );\r\n  } else if (data === \"ACCEPTED\") {\r\n    return (\r\n      <Badge className=\"bg-success\" pill>\r\n        Active\r\n      </Badge>\r\n    );\r\n  } else if (data === \"WAITING\") {\r\n    return (\r\n      <Badge className=\"bg-info\" pill>\r\n        Waiting on <br /> Shelter\r\n      </Badge>\r\n    );\r\n  } else {\r\n    return (\r\n      <Badge className=\"bg-dark\" pill>\r\n        No status\r\n      </Badge>\r\n    );\r\n  }\r\n};\r\n\r\nexport const SubscriptionStatusForTable = (data) => {\r\n  if (data === \"active\") {\r\n    return (\r\n      <Badge className=\"bg-success\" pill>\r\n        {data}\r\n      </Badge>\r\n    );\r\n  } else if (data === \".\") {\r\n    return (\r\n      <Badge className=\"bg-info\" pill>\r\n        {data}\r\n      </Badge>\r\n    );\r\n  } else {\r\n    return (\r\n      <Badge className=\"bg-danger\" pill>\r\n        {data}\r\n      </Badge>\r\n    );\r\n  }\r\n}; \r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  parseDate,\r\n  setUserInitialValues,\r\n};\r\n"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","_ref","graphData","mode","data","labels","map","item","_item$day","day","month","datasets","label","notRedeemedCount","backgroundColor","redeemedCount","_item$state","state","shelterName","count","_jsx","Bar","options","responsive","plugins","legend","position","title","display","text","color","fontSize","fontWeight","scales","x","beginAtZero","max","ticks","stepSize","y","callback","value","Dashboard","dispatch","useDispatch","tableData","setTableData","useState","cardsData","setCardsData","duration","setDuration","giveAwayData","setGiveAwayData","stateWiseData","setStateWiseData","selectOneState","setSelectOneState","ordersTableData","setOrdersTableData","emailPermission","setEmailPermission","repeatPurchaseRate","setRepeatPurchaseRate","recentSheltersData","setRecentSheltersData","redemptionGraphData","setRedemptionGraphData","recentShelterOrders","setRecentShelterOrders","dateRange","setDateRange","startDate","Date","endDate","addDays","key","useEffect","recentOrders","apiEndpoint","then","res","_res$payload5","_res$payload5$data","type","payload","subscriptions","fetchDashboardCards","DASHBOARD_CARDS","dashboardCard","_res$payload","_res$payload2","_res$payload3","GiveAways","repeatAdopters","fetchRecentShelters","recentSheltersEndpoint","ADMIN_GET_LATEST_SHELTERS","recentShelters","_res$payload4","shelters","fetchStateWiseGraphData","graphApiEndPoint","getAllStateWiseData","dashboardCards","_res$payload6","_res$payload7","_res$payload8","ADMIN_DASHBOARD_GRAPH","getAllAdopterGraph","_res$payload9","adopterData","length","sheltersArray","forEach","_item$shelterName","push","slice","email","ratio","numberOfAdopters","numberOfPack","totalAdopters","inviteSent","redeem","inviteAccepted","status","ShelterStatusForTable","action","children","_jsxs","UncontrolledDropdown","DropdownToggle","className","nav","disabled","DropdownMenu","DropdownItem","Link","to","id","IoDocumentTextOutline","_item$Shelter","_item$Shelter2","_item$Shelter3","Shelter","product","productId","ProductNameForTable","quantity","frequency","SubscriptionStatusForTable","lastSentDate","format","CardsImages","Images","PetHome_Image","Order_Image","Shear_Image","Gift_Image","appendedCardData","index","cardImage","Container","Row","Col","sm","md","lg","xl","PageHeading","headingText","DateRangeModal","handleSelect","ranges","selection","handleClearClick","items","src","alt","MyDropdown","name","Options","FilterDuration","onChangeHandle","e","target","showPlaceholder","Chart","adopterRepeatPercentage","TotalSheltersGiveAways","TotalAdoptersGiveAways","Total","Table","columns","columnsForRecent5Shelters","columnsForRecent5Orders","US_States","placeholder","MyTableComponent","sortConfig","setSortConfig","direction","sortedData","React","sort","a","b","Thead","Tr","column","Th","align","onClick","handleSort","dataKey","TiArrowUnsorted","size","Tbody","cellIndex","Td","rowIndex","memo","isDatePickerVisible","setDatePickerVisible","modalRef","useRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","htmlFor","handleLabelClick","celendarIcon","ref","DateRange","onChange","moveRangeOnFirstSelection","showSelectionPreview","maxDate","style","textTransform","props","onBlurHandle","labelClass","Label","onBlur","PAGE_RANGE","Single_Adopter_User_List","GET_ALL_SHELTERS","GET_ADOPTERS_OF_SHELTER","NumberOfCats","i","end","productSubscription","FrequencyOptions","QuantityOptions","weeksRange","monthsRange","RecordsPerPageOptions","GetAllSheltersColumns","Badge","pill"],"sourceRoot":""}